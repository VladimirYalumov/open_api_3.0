"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.MAPPING_DATA_KEY = void 0;

var _traverse = _interopRequireDefault(require("../traverse"));

var _OpenAPISchema = _interopRequireDefault(require("./OpenAPISchema"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable import/no-cycle */
const MAPPING_DATA_KEY = 'x-openapiCli_resolveMappingData';
exports.MAPPING_DATA_KEY = MAPPING_DATA_KEY;
var _default = {
  name: 'OpenAPIDiscriminator',
  isIdempotent: true,
  properties: {
    propertyName: null,
    mapping: null
  },
  customResolveFields: (node, ctx, visited) => {
    if (node && node.mapping && typeof node.mapping === 'object') {
      ctx.path.push('mapping');

      for (const key of Object.keys(node.mapping)) {
        ctx.path.push(key);
        (0, _traverse.default)({
          $ref: node.mapping[key],
          [MAPPING_DATA_KEY]: {
            // FIXME: too hacky
            mapping: node.mapping,
            key
          }
        }, _OpenAPISchema.default, ctx, visited);
        ctx.path.pop();
      }

      ctx.path.pop();
    }
  }
};
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy90eXBlcy9PcGVuQVBJRGlzY3JpbWluYXRvci5qcyJdLCJuYW1lcyI6WyJNQVBQSU5HX0RBVEFfS0VZIiwibmFtZSIsImlzSWRlbXBvdGVudCIsInByb3BlcnRpZXMiLCJwcm9wZXJ0eU5hbWUiLCJtYXBwaW5nIiwiY3VzdG9tUmVzb2x2ZUZpZWxkcyIsIm5vZGUiLCJjdHgiLCJ2aXNpdGVkIiwicGF0aCIsInB1c2giLCJrZXkiLCJPYmplY3QiLCJrZXlzIiwiJHJlZiIsIk9wZW5BUElTY2hlbWEiLCJwb3AiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFDQTs7QUFDQTs7OztBQUZBO0FBSU8sTUFBTUEsZ0JBQWdCLEdBQUcsaUNBQXpCOztlQUVRO0FBQ2JDLEVBQUFBLElBQUksRUFBRSxzQkFETztBQUViQyxFQUFBQSxZQUFZLEVBQUUsSUFGRDtBQUdiQyxFQUFBQSxVQUFVLEVBQUU7QUFDVkMsSUFBQUEsWUFBWSxFQUFFLElBREo7QUFFVkMsSUFBQUEsT0FBTyxFQUFFO0FBRkMsR0FIQztBQU9iQyxFQUFBQSxtQkFBbUIsRUFBRSxDQUFDQyxJQUFELEVBQU9DLEdBQVAsRUFBWUMsT0FBWixLQUF3QjtBQUMzQyxRQUFJRixJQUFJLElBQUlBLElBQUksQ0FBQ0YsT0FBYixJQUF3QixPQUFPRSxJQUFJLENBQUNGLE9BQVosS0FBd0IsUUFBcEQsRUFBOEQ7QUFDNURHLE1BQUFBLEdBQUcsQ0FBQ0UsSUFBSixDQUFTQyxJQUFULENBQWMsU0FBZDs7QUFDQSxXQUFLLE1BQU1DLEdBQVgsSUFBa0JDLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZUCxJQUFJLENBQUNGLE9BQWpCLENBQWxCLEVBQTZDO0FBQzNDRyxRQUFBQSxHQUFHLENBQUNFLElBQUosQ0FBU0MsSUFBVCxDQUFjQyxHQUFkO0FBQ0EsK0JBQ0U7QUFDRUcsVUFBQUEsSUFBSSxFQUFFUixJQUFJLENBQUNGLE9BQUwsQ0FBYU8sR0FBYixDQURSO0FBRUUsV0FBQ1osZ0JBQUQsR0FBb0I7QUFBRTtBQUNwQkssWUFBQUEsT0FBTyxFQUFFRSxJQUFJLENBQUNGLE9BREk7QUFFbEJPLFlBQUFBO0FBRmtCO0FBRnRCLFNBREYsRUFRRUksc0JBUkYsRUFTRVIsR0FURixFQVVFQyxPQVZGO0FBWUFELFFBQUFBLEdBQUcsQ0FBQ0UsSUFBSixDQUFTTyxHQUFUO0FBQ0Q7O0FBQ0RULE1BQUFBLEdBQUcsQ0FBQ0UsSUFBSixDQUFTTyxHQUFUO0FBQ0Q7QUFDRjtBQTVCWSxDIiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgaW1wb3J0L25vLWN5Y2xlICovXG5pbXBvcnQgdHJhdmVyc2VOb2RlIGZyb20gJy4uL3RyYXZlcnNlJztcbmltcG9ydCBPcGVuQVBJU2NoZW1hIGZyb20gJy4vT3BlbkFQSVNjaGVtYSc7XG5cbmV4cG9ydCBjb25zdCBNQVBQSU5HX0RBVEFfS0VZID0gJ3gtb3BlbmFwaUNsaV9yZXNvbHZlTWFwcGluZ0RhdGEnO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6ICdPcGVuQVBJRGlzY3JpbWluYXRvcicsXG4gIGlzSWRlbXBvdGVudDogdHJ1ZSxcbiAgcHJvcGVydGllczoge1xuICAgIHByb3BlcnR5TmFtZTogbnVsbCxcbiAgICBtYXBwaW5nOiBudWxsLFxuICB9LFxuICBjdXN0b21SZXNvbHZlRmllbGRzOiAobm9kZSwgY3R4LCB2aXNpdGVkKSA9PiB7XG4gICAgaWYgKG5vZGUgJiYgbm9kZS5tYXBwaW5nICYmIHR5cGVvZiBub2RlLm1hcHBpbmcgPT09ICdvYmplY3QnKSB7XG4gICAgICBjdHgucGF0aC5wdXNoKCdtYXBwaW5nJyk7XG4gICAgICBmb3IgKGNvbnN0IGtleSBvZiBPYmplY3Qua2V5cyhub2RlLm1hcHBpbmcpKSB7XG4gICAgICAgIGN0eC5wYXRoLnB1c2goa2V5KTtcbiAgICAgICAgdHJhdmVyc2VOb2RlKFxuICAgICAgICAgIHtcbiAgICAgICAgICAgICRyZWY6IG5vZGUubWFwcGluZ1trZXldLFxuICAgICAgICAgICAgW01BUFBJTkdfREFUQV9LRVldOiB7IC8vIEZJWE1FOiB0b28gaGFja3lcbiAgICAgICAgICAgICAgbWFwcGluZzogbm9kZS5tYXBwaW5nLFxuICAgICAgICAgICAgICBrZXksXG4gICAgICAgICAgICB9LFxuICAgICAgICAgIH0sXG4gICAgICAgICAgT3BlbkFQSVNjaGVtYSxcbiAgICAgICAgICBjdHgsXG4gICAgICAgICAgdmlzaXRlZCxcbiAgICAgICAgKTtcbiAgICAgICAgY3R4LnBhdGgucG9wKCk7XG4gICAgICB9XG4gICAgICBjdHgucGF0aC5wb3AoKTtcbiAgICB9XG4gIH0sXG59O1xuIl19