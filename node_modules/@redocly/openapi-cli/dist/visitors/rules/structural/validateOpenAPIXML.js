"use strict";

class ValidateOpenAPIXML {
  static get rule() {
    return 'oas3-schema/xml';
  }

  get validators() {
    return {
      name(node, ctx) {
        if (node && node.name && typeof node.name !== 'string') return ctx.createError(ctx.messageHelpers.fieldTypeMismatchMessageHelper('string'), 'value');
        return null;
      },

      namespace(node, ctx) {
        // TODO: add validation that format is uri
        if (node && node.namespace && typeof node.namespace !== 'string') return ctx.createError(ctx.messageHelpers.fieldTypeMismatchMessageHelper('string'), 'value');
        return null;
      },

      prefix(node, ctx) {
        if (node && node.prefix && typeof node.prefix !== 'string') return ctx.createError(ctx.messageHelpers.fieldTypeMismatchMessageHelper('string'), 'value');
        return null;
      },

      attribute(node, ctx) {
        if (node && node.attribute && typeof node.attribute !== 'boolean') return ctx.createError(ctx.messageHelpers.fieldTypeMismatchMessageHelper('boolean'), 'value');
        return null;
      },

      wrapped(node, ctx) {
        if (node && node.wrapped && typeof node.wrapped !== 'boolean') return ctx.createError(ctx.messageHelpers.fieldTypeMismatchMessageHelper('boolean'), 'value');
        return null;
      }

    };
  }

  OpenAPIXML() {
    return {
      onEnter: (node, definition, ctx) => ctx.validateFields(this.config, this.rule, this.validators)
    };
  }

}

module.exports = ValidateOpenAPIXML;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy92aXNpdG9ycy9ydWxlcy9zdHJ1Y3R1cmFsL3ZhbGlkYXRlT3BlbkFQSVhNTC5qcyJdLCJuYW1lcyI6WyJWYWxpZGF0ZU9wZW5BUElYTUwiLCJydWxlIiwidmFsaWRhdG9ycyIsIm5hbWUiLCJub2RlIiwiY3R4IiwiY3JlYXRlRXJyb3IiLCJtZXNzYWdlSGVscGVycyIsImZpZWxkVHlwZU1pc21hdGNoTWVzc2FnZUhlbHBlciIsIm5hbWVzcGFjZSIsInByZWZpeCIsImF0dHJpYnV0ZSIsIndyYXBwZWQiLCJPcGVuQVBJWE1MIiwib25FbnRlciIsImRlZmluaXRpb24iLCJ2YWxpZGF0ZUZpZWxkcyIsImNvbmZpZyIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUEsTUFBTUEsa0JBQU4sQ0FBeUI7QUFDdkIsYUFBV0MsSUFBWCxHQUFrQjtBQUNoQixXQUFPLGlCQUFQO0FBQ0Q7O0FBRUQsTUFBSUMsVUFBSixHQUFpQjtBQUNmLFdBQU87QUFDTEMsTUFBQUEsSUFBSSxDQUFDQyxJQUFELEVBQU9DLEdBQVAsRUFBWTtBQUNkLFlBQUlELElBQUksSUFBSUEsSUFBSSxDQUFDRCxJQUFiLElBQXFCLE9BQU9DLElBQUksQ0FBQ0QsSUFBWixLQUFxQixRQUE5QyxFQUF3RCxPQUFPRSxHQUFHLENBQUNDLFdBQUosQ0FBZ0JELEdBQUcsQ0FBQ0UsY0FBSixDQUFtQkMsOEJBQW5CLENBQWtELFFBQWxELENBQWhCLEVBQTZFLE9BQTdFLENBQVA7QUFDeEQsZUFBTyxJQUFQO0FBQ0QsT0FKSTs7QUFLTEMsTUFBQUEsU0FBUyxDQUFDTCxJQUFELEVBQU9DLEdBQVAsRUFBWTtBQUNuQjtBQUNBLFlBQUlELElBQUksSUFBSUEsSUFBSSxDQUFDSyxTQUFiLElBQTBCLE9BQU9MLElBQUksQ0FBQ0ssU0FBWixLQUEwQixRQUF4RCxFQUFrRSxPQUFPSixHQUFHLENBQUNDLFdBQUosQ0FBZ0JELEdBQUcsQ0FBQ0UsY0FBSixDQUFtQkMsOEJBQW5CLENBQWtELFFBQWxELENBQWhCLEVBQTZFLE9BQTdFLENBQVA7QUFDbEUsZUFBTyxJQUFQO0FBQ0QsT0FUSTs7QUFVTEUsTUFBQUEsTUFBTSxDQUFDTixJQUFELEVBQU9DLEdBQVAsRUFBWTtBQUNoQixZQUFJRCxJQUFJLElBQUlBLElBQUksQ0FBQ00sTUFBYixJQUF1QixPQUFPTixJQUFJLENBQUNNLE1BQVosS0FBdUIsUUFBbEQsRUFBNEQsT0FBT0wsR0FBRyxDQUFDQyxXQUFKLENBQWdCRCxHQUFHLENBQUNFLGNBQUosQ0FBbUJDLDhCQUFuQixDQUFrRCxRQUFsRCxDQUFoQixFQUE2RSxPQUE3RSxDQUFQO0FBQzVELGVBQU8sSUFBUDtBQUNELE9BYkk7O0FBY0xHLE1BQUFBLFNBQVMsQ0FBQ1AsSUFBRCxFQUFPQyxHQUFQLEVBQVk7QUFDbkIsWUFBSUQsSUFBSSxJQUFJQSxJQUFJLENBQUNPLFNBQWIsSUFBMEIsT0FBT1AsSUFBSSxDQUFDTyxTQUFaLEtBQTBCLFNBQXhELEVBQW1FLE9BQU9OLEdBQUcsQ0FBQ0MsV0FBSixDQUFnQkQsR0FBRyxDQUFDRSxjQUFKLENBQW1CQyw4QkFBbkIsQ0FBa0QsU0FBbEQsQ0FBaEIsRUFBOEUsT0FBOUUsQ0FBUDtBQUNuRSxlQUFPLElBQVA7QUFDRCxPQWpCSTs7QUFrQkxJLE1BQUFBLE9BQU8sQ0FBQ1IsSUFBRCxFQUFPQyxHQUFQLEVBQVk7QUFDakIsWUFBSUQsSUFBSSxJQUFJQSxJQUFJLENBQUNRLE9BQWIsSUFBd0IsT0FBT1IsSUFBSSxDQUFDUSxPQUFaLEtBQXdCLFNBQXBELEVBQStELE9BQU9QLEdBQUcsQ0FBQ0MsV0FBSixDQUFnQkQsR0FBRyxDQUFDRSxjQUFKLENBQW1CQyw4QkFBbkIsQ0FBa0QsU0FBbEQsQ0FBaEIsRUFBOEUsT0FBOUUsQ0FBUDtBQUMvRCxlQUFPLElBQVA7QUFDRDs7QUFyQkksS0FBUDtBQXVCRDs7QUFFREssRUFBQUEsVUFBVSxHQUFHO0FBQ1gsV0FBTztBQUNMQyxNQUFBQSxPQUFPLEVBQUUsQ0FBQ1YsSUFBRCxFQUFPVyxVQUFQLEVBQW1CVixHQUFuQixLQUEyQkEsR0FBRyxDQUFDVyxjQUFKLENBQ2xDLEtBQUtDLE1BRDZCLEVBQ3JCLEtBQUtoQixJQURnQixFQUNWLEtBQUtDLFVBREs7QUFEL0IsS0FBUDtBQUtEOztBQXJDc0I7O0FBd0N6QmdCLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQm5CLGtCQUFqQiIsInNvdXJjZXNDb250ZW50IjpbImNsYXNzIFZhbGlkYXRlT3BlbkFQSVhNTCB7XG4gIHN0YXRpYyBnZXQgcnVsZSgpIHtcbiAgICByZXR1cm4gJ29hczMtc2NoZW1hL3htbCc7XG4gIH1cblxuICBnZXQgdmFsaWRhdG9ycygpIHtcbiAgICByZXR1cm4ge1xuICAgICAgbmFtZShub2RlLCBjdHgpIHtcbiAgICAgICAgaWYgKG5vZGUgJiYgbm9kZS5uYW1lICYmIHR5cGVvZiBub2RlLm5hbWUgIT09ICdzdHJpbmcnKSByZXR1cm4gY3R4LmNyZWF0ZUVycm9yKGN0eC5tZXNzYWdlSGVscGVycy5maWVsZFR5cGVNaXNtYXRjaE1lc3NhZ2VIZWxwZXIoJ3N0cmluZycpLCAndmFsdWUnKTtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICB9LFxuICAgICAgbmFtZXNwYWNlKG5vZGUsIGN0eCkge1xuICAgICAgICAvLyBUT0RPOiBhZGQgdmFsaWRhdGlvbiB0aGF0IGZvcm1hdCBpcyB1cmlcbiAgICAgICAgaWYgKG5vZGUgJiYgbm9kZS5uYW1lc3BhY2UgJiYgdHlwZW9mIG5vZGUubmFtZXNwYWNlICE9PSAnc3RyaW5nJykgcmV0dXJuIGN0eC5jcmVhdGVFcnJvcihjdHgubWVzc2FnZUhlbHBlcnMuZmllbGRUeXBlTWlzbWF0Y2hNZXNzYWdlSGVscGVyKCdzdHJpbmcnKSwgJ3ZhbHVlJyk7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgICAgfSxcbiAgICAgIHByZWZpeChub2RlLCBjdHgpIHtcbiAgICAgICAgaWYgKG5vZGUgJiYgbm9kZS5wcmVmaXggJiYgdHlwZW9mIG5vZGUucHJlZml4ICE9PSAnc3RyaW5nJykgcmV0dXJuIGN0eC5jcmVhdGVFcnJvcihjdHgubWVzc2FnZUhlbHBlcnMuZmllbGRUeXBlTWlzbWF0Y2hNZXNzYWdlSGVscGVyKCdzdHJpbmcnKSwgJ3ZhbHVlJyk7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgICAgfSxcbiAgICAgIGF0dHJpYnV0ZShub2RlLCBjdHgpIHtcbiAgICAgICAgaWYgKG5vZGUgJiYgbm9kZS5hdHRyaWJ1dGUgJiYgdHlwZW9mIG5vZGUuYXR0cmlidXRlICE9PSAnYm9vbGVhbicpIHJldHVybiBjdHguY3JlYXRlRXJyb3IoY3R4Lm1lc3NhZ2VIZWxwZXJzLmZpZWxkVHlwZU1pc21hdGNoTWVzc2FnZUhlbHBlcignYm9vbGVhbicpLCAndmFsdWUnKTtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICB9LFxuICAgICAgd3JhcHBlZChub2RlLCBjdHgpIHtcbiAgICAgICAgaWYgKG5vZGUgJiYgbm9kZS53cmFwcGVkICYmIHR5cGVvZiBub2RlLndyYXBwZWQgIT09ICdib29sZWFuJykgcmV0dXJuIGN0eC5jcmVhdGVFcnJvcihjdHgubWVzc2FnZUhlbHBlcnMuZmllbGRUeXBlTWlzbWF0Y2hNZXNzYWdlSGVscGVyKCdib29sZWFuJyksICd2YWx1ZScpO1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgIH0sXG4gICAgfTtcbiAgfVxuXG4gIE9wZW5BUElYTUwoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG9uRW50ZXI6IChub2RlLCBkZWZpbml0aW9uLCBjdHgpID0+IGN0eC52YWxpZGF0ZUZpZWxkcyhcbiAgICAgICAgdGhpcy5jb25maWcsIHRoaXMucnVsZSwgdGhpcy52YWxpZGF0b3JzLFxuICAgICAgKSxcbiAgICB9O1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gVmFsaWRhdGVPcGVuQVBJWE1MO1xuIl19