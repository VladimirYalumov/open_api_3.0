"use strict";

class ValidateOpenAPIServer {
  static get rule() {
    return 'oas3-schema/server';
  }

  get validators() {
    return {
      url(node, ctx) {
        if (!node || !node.url || typeof node.url !== 'string') return ctx.createError(ctx.messageHelpers.missingRequiredField('url'), 'key');
        if (typeof node.url !== 'string') return ctx.createError(ctx.messageHelpers.fieldTypeMismatchMessageHelper('string'), 'value');
        return null;
      },

      description(node, ctx) {
        return node && node.description && typeof node.description !== 'string' ? ctx.createError(ctx.messageHelpers.fieldTypeMismatchMessageHelper('string'), 'value') : null;
      }

    };
  }

  OpenAPIServer() {
    return {
      onEnter: (node, definition, ctx) => ctx.validateFields(this.config, this.rule, this.validators)
    };
  }

}

module.exports = ValidateOpenAPIServer;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy92aXNpdG9ycy9ydWxlcy9zdHJ1Y3R1cmFsL3ZhbGlkYXRlT3BlbkFQSVNlcnZlci5qcyJdLCJuYW1lcyI6WyJWYWxpZGF0ZU9wZW5BUElTZXJ2ZXIiLCJydWxlIiwidmFsaWRhdG9ycyIsInVybCIsIm5vZGUiLCJjdHgiLCJjcmVhdGVFcnJvciIsIm1lc3NhZ2VIZWxwZXJzIiwibWlzc2luZ1JlcXVpcmVkRmllbGQiLCJmaWVsZFR5cGVNaXNtYXRjaE1lc3NhZ2VIZWxwZXIiLCJkZXNjcmlwdGlvbiIsIk9wZW5BUElTZXJ2ZXIiLCJvbkVudGVyIiwiZGVmaW5pdGlvbiIsInZhbGlkYXRlRmllbGRzIiwiY29uZmlnIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxNQUFNQSxxQkFBTixDQUE0QjtBQUMxQixhQUFXQyxJQUFYLEdBQWtCO0FBQ2hCLFdBQU8sb0JBQVA7QUFDRDs7QUFFRCxNQUFJQyxVQUFKLEdBQWlCO0FBQ2YsV0FBTztBQUNMQyxNQUFBQSxHQUFHLENBQUNDLElBQUQsRUFBT0MsR0FBUCxFQUFZO0FBQ2IsWUFBSSxDQUFDRCxJQUFELElBQVMsQ0FBQ0EsSUFBSSxDQUFDRCxHQUFmLElBQXNCLE9BQU9DLElBQUksQ0FBQ0QsR0FBWixLQUFvQixRQUE5QyxFQUF3RCxPQUFPRSxHQUFHLENBQUNDLFdBQUosQ0FBZ0JELEdBQUcsQ0FBQ0UsY0FBSixDQUFtQkMsb0JBQW5CLENBQXdDLEtBQXhDLENBQWhCLEVBQWdFLEtBQWhFLENBQVA7QUFDeEQsWUFBSSxPQUFPSixJQUFJLENBQUNELEdBQVosS0FBb0IsUUFBeEIsRUFBa0MsT0FBT0UsR0FBRyxDQUFDQyxXQUFKLENBQWdCRCxHQUFHLENBQUNFLGNBQUosQ0FBbUJFLDhCQUFuQixDQUFrRCxRQUFsRCxDQUFoQixFQUE2RSxPQUE3RSxDQUFQO0FBQ2xDLGVBQU8sSUFBUDtBQUNELE9BTEk7O0FBTUxDLE1BQUFBLFdBQVcsQ0FBQ04sSUFBRCxFQUFPQyxHQUFQLEVBQVk7QUFDckIsZUFBT0QsSUFBSSxJQUFJQSxJQUFJLENBQUNNLFdBQWIsSUFBNEIsT0FBT04sSUFBSSxDQUFDTSxXQUFaLEtBQTRCLFFBQXhELEdBQ0hMLEdBQUcsQ0FBQ0MsV0FBSixDQUFnQkQsR0FBRyxDQUFDRSxjQUFKLENBQW1CRSw4QkFBbkIsQ0FBa0QsUUFBbEQsQ0FBaEIsRUFBNkUsT0FBN0UsQ0FERyxHQUNxRixJQUQ1RjtBQUVEOztBQVRJLEtBQVA7QUFXRDs7QUFFREUsRUFBQUEsYUFBYSxHQUFHO0FBQ2QsV0FBTztBQUNMQyxNQUFBQSxPQUFPLEVBQUUsQ0FBQ1IsSUFBRCxFQUFPUyxVQUFQLEVBQW1CUixHQUFuQixLQUEyQkEsR0FBRyxDQUFDUyxjQUFKLENBQ2xDLEtBQUtDLE1BRDZCLEVBQ3JCLEtBQUtkLElBRGdCLEVBQ1YsS0FBS0MsVUFESztBQUQvQixLQUFQO0FBS0Q7O0FBekJ5Qjs7QUE0QjVCYyxNQUFNLENBQUNDLE9BQVAsR0FBaUJqQixxQkFBakIiLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBWYWxpZGF0ZU9wZW5BUElTZXJ2ZXIge1xuICBzdGF0aWMgZ2V0IHJ1bGUoKSB7XG4gICAgcmV0dXJuICdvYXMzLXNjaGVtYS9zZXJ2ZXInO1xuICB9XG5cbiAgZ2V0IHZhbGlkYXRvcnMoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHVybChub2RlLCBjdHgpIHtcbiAgICAgICAgaWYgKCFub2RlIHx8ICFub2RlLnVybCB8fCB0eXBlb2Ygbm9kZS51cmwgIT09ICdzdHJpbmcnKSByZXR1cm4gY3R4LmNyZWF0ZUVycm9yKGN0eC5tZXNzYWdlSGVscGVycy5taXNzaW5nUmVxdWlyZWRGaWVsZCgndXJsJyksICdrZXknKTtcbiAgICAgICAgaWYgKHR5cGVvZiBub2RlLnVybCAhPT0gJ3N0cmluZycpIHJldHVybiBjdHguY3JlYXRlRXJyb3IoY3R4Lm1lc3NhZ2VIZWxwZXJzLmZpZWxkVHlwZU1pc21hdGNoTWVzc2FnZUhlbHBlcignc3RyaW5nJyksICd2YWx1ZScpO1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgIH0sXG4gICAgICBkZXNjcmlwdGlvbihub2RlLCBjdHgpIHtcbiAgICAgICAgcmV0dXJuIG5vZGUgJiYgbm9kZS5kZXNjcmlwdGlvbiAmJiB0eXBlb2Ygbm9kZS5kZXNjcmlwdGlvbiAhPT0gJ3N0cmluZydcbiAgICAgICAgICA/IGN0eC5jcmVhdGVFcnJvcihjdHgubWVzc2FnZUhlbHBlcnMuZmllbGRUeXBlTWlzbWF0Y2hNZXNzYWdlSGVscGVyKCdzdHJpbmcnKSwgJ3ZhbHVlJykgOiBudWxsO1xuICAgICAgfSxcbiAgICB9O1xuICB9XG5cbiAgT3BlbkFQSVNlcnZlcigpIHtcbiAgICByZXR1cm4ge1xuICAgICAgb25FbnRlcjogKG5vZGUsIGRlZmluaXRpb24sIGN0eCkgPT4gY3R4LnZhbGlkYXRlRmllbGRzKFxuICAgICAgICB0aGlzLmNvbmZpZywgdGhpcy5ydWxlLCB0aGlzLnZhbGlkYXRvcnMsXG4gICAgICApLFxuICAgIH07XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBWYWxpZGF0ZU9wZW5BUElTZXJ2ZXI7XG4iXX0=