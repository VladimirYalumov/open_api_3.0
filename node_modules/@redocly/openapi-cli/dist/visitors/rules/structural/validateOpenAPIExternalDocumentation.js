"use strict";

var _utils = require("../../../utils");

class ValidateOpenAPIExternalDocumentation {
  static get rule() {
    return 'oas3-schema/external-docs';
  }

  get validators() {
    return {
      description(node, ctx) {
        return node && node.description && typeof node.description !== 'string' ? ctx.createError(ctx.messageHelpers.fieldTypeMismatchMessageHelper('string'), 'value') : null;
      },

      url(node, ctx) {
        if (node && !node.url) return ctx.createError(ctx.messageHelpers.missingRequiredField('url'), 'key');
        if (!(0, _utils.isUrl)(node.url)) return ctx.createError('url must be a valid URL', 'value');
        return null;
      }

    };
  }

  OpenAPIExternalDocumentation() {
    return {
      onEnter: (node, definition, ctx) => ctx.validateFields(this.config, this.rule, this.validators)
    };
  }

}

module.exports = ValidateOpenAPIExternalDocumentation;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy92aXNpdG9ycy9ydWxlcy9zdHJ1Y3R1cmFsL3ZhbGlkYXRlT3BlbkFQSUV4dGVybmFsRG9jdW1lbnRhdGlvbi5qcyJdLCJuYW1lcyI6WyJWYWxpZGF0ZU9wZW5BUElFeHRlcm5hbERvY3VtZW50YXRpb24iLCJydWxlIiwidmFsaWRhdG9ycyIsImRlc2NyaXB0aW9uIiwibm9kZSIsImN0eCIsImNyZWF0ZUVycm9yIiwibWVzc2FnZUhlbHBlcnMiLCJmaWVsZFR5cGVNaXNtYXRjaE1lc3NhZ2VIZWxwZXIiLCJ1cmwiLCJtaXNzaW5nUmVxdWlyZWRGaWVsZCIsIk9wZW5BUElFeHRlcm5hbERvY3VtZW50YXRpb24iLCJvbkVudGVyIiwiZGVmaW5pdGlvbiIsInZhbGlkYXRlRmllbGRzIiwiY29uZmlnIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFFQSxNQUFNQSxvQ0FBTixDQUEyQztBQUN6QyxhQUFXQyxJQUFYLEdBQWtCO0FBQ2hCLFdBQU8sMkJBQVA7QUFDRDs7QUFFRCxNQUFJQyxVQUFKLEdBQWlCO0FBQ2YsV0FBTztBQUNMQyxNQUFBQSxXQUFXLENBQUNDLElBQUQsRUFBT0MsR0FBUCxFQUFZO0FBQ3JCLGVBQU9ELElBQUksSUFBSUEsSUFBSSxDQUFDRCxXQUFiLElBQTRCLE9BQU9DLElBQUksQ0FBQ0QsV0FBWixLQUE0QixRQUF4RCxHQUFtRUUsR0FBRyxDQUFDQyxXQUFKLENBQWdCRCxHQUFHLENBQUNFLGNBQUosQ0FBbUJDLDhCQUFuQixDQUFrRCxRQUFsRCxDQUFoQixFQUE2RSxPQUE3RSxDQUFuRSxHQUEySixJQUFsSztBQUNELE9BSEk7O0FBSUxDLE1BQUFBLEdBQUcsQ0FBQ0wsSUFBRCxFQUFPQyxHQUFQLEVBQVk7QUFDYixZQUFJRCxJQUFJLElBQUksQ0FBQ0EsSUFBSSxDQUFDSyxHQUFsQixFQUF1QixPQUFPSixHQUFHLENBQUNDLFdBQUosQ0FBZ0JELEdBQUcsQ0FBQ0UsY0FBSixDQUFtQkcsb0JBQW5CLENBQXdDLEtBQXhDLENBQWhCLEVBQWdFLEtBQWhFLENBQVA7QUFDdkIsWUFBSSxDQUFDLGtCQUFNTixJQUFJLENBQUNLLEdBQVgsQ0FBTCxFQUFzQixPQUFPSixHQUFHLENBQUNDLFdBQUosQ0FBZ0IseUJBQWhCLEVBQTJDLE9BQTNDLENBQVA7QUFDdEIsZUFBTyxJQUFQO0FBQ0Q7O0FBUkksS0FBUDtBQVVEOztBQUVESyxFQUFBQSw0QkFBNEIsR0FBRztBQUM3QixXQUFPO0FBQ0xDLE1BQUFBLE9BQU8sRUFBRSxDQUFDUixJQUFELEVBQU9TLFVBQVAsRUFBbUJSLEdBQW5CLEtBQTJCQSxHQUFHLENBQUNTLGNBQUosQ0FDbEMsS0FBS0MsTUFENkIsRUFDckIsS0FBS2QsSUFEZ0IsRUFDVixLQUFLQyxVQURLO0FBRC9CLEtBQVA7QUFLRDs7QUF4QndDOztBQTJCM0NjLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmpCLG9DQUFqQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzVXJsIH0gZnJvbSAnLi4vLi4vLi4vdXRpbHMnO1xuXG5jbGFzcyBWYWxpZGF0ZU9wZW5BUElFeHRlcm5hbERvY3VtZW50YXRpb24ge1xuICBzdGF0aWMgZ2V0IHJ1bGUoKSB7XG4gICAgcmV0dXJuICdvYXMzLXNjaGVtYS9leHRlcm5hbC1kb2NzJztcbiAgfVxuXG4gIGdldCB2YWxpZGF0b3JzKCkge1xuICAgIHJldHVybiB7XG4gICAgICBkZXNjcmlwdGlvbihub2RlLCBjdHgpIHtcbiAgICAgICAgcmV0dXJuIG5vZGUgJiYgbm9kZS5kZXNjcmlwdGlvbiAmJiB0eXBlb2Ygbm9kZS5kZXNjcmlwdGlvbiAhPT0gJ3N0cmluZycgPyBjdHguY3JlYXRlRXJyb3IoY3R4Lm1lc3NhZ2VIZWxwZXJzLmZpZWxkVHlwZU1pc21hdGNoTWVzc2FnZUhlbHBlcignc3RyaW5nJyksICd2YWx1ZScpIDogbnVsbDtcbiAgICAgIH0sXG4gICAgICB1cmwobm9kZSwgY3R4KSB7XG4gICAgICAgIGlmIChub2RlICYmICFub2RlLnVybCkgcmV0dXJuIGN0eC5jcmVhdGVFcnJvcihjdHgubWVzc2FnZUhlbHBlcnMubWlzc2luZ1JlcXVpcmVkRmllbGQoJ3VybCcpLCAna2V5Jyk7XG4gICAgICAgIGlmICghaXNVcmwobm9kZS51cmwpKSByZXR1cm4gY3R4LmNyZWF0ZUVycm9yKCd1cmwgbXVzdCBiZSBhIHZhbGlkIFVSTCcsICd2YWx1ZScpO1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgIH0sXG4gICAgfTtcbiAgfVxuXG4gIE9wZW5BUElFeHRlcm5hbERvY3VtZW50YXRpb24oKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG9uRW50ZXI6IChub2RlLCBkZWZpbml0aW9uLCBjdHgpID0+IGN0eC52YWxpZGF0ZUZpZWxkcyhcbiAgICAgICAgdGhpcy5jb25maWcsIHRoaXMucnVsZSwgdGhpcy52YWxpZGF0b3JzLFxuICAgICAgKSxcbiAgICB9O1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gVmFsaWRhdGVPcGVuQVBJRXh0ZXJuYWxEb2N1bWVudGF0aW9uO1xuIl19