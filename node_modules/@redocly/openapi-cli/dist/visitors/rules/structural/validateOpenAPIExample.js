"use strict";

class ValidateOpenAPIExample {
  static get rule() {
    return 'oas3-schema/example';
  }

  get validators() {
    return {
      value(node, ctx) {
        if (node.value && node.externalValue) {
          return ctx.createError(ctx.messageHelpers.mutuallyExclusiveFieldsMessageHelper(['value', 'externalValue']), 'key');
        }

        return null;
      },

      externalValue(node, ctx) {
        if (node.externalValue && typeof node.externalValue !== 'string') {
          return ctx.createError(ctx.messageHelpers.fieldTypeMismatchMessageHelper('string'), 'value');
        }

        if (node.value && node.externalValue) {
          return ctx.createError(ctx.messageHelpers.mutuallyExclusiveFieldsMessageHelper(['value', 'externalValue']), 'key');
        }

        return null;
      },

      description(node, ctx) {
        if (node.description && typeof node.description !== 'string') {
          return ctx.createError(ctx.messageHelpers.fieldTypeMismatchMessageHelper('string'), 'value');
        }

        return null;
      },

      summary(node, ctx) {
        if (node.summary && typeof node.summary !== 'string') {
          return ctx.createError(ctx.messageHelpers.fieldTypeMismatchMessageHelper('string'), 'value');
        }

        return null;
      }

    };
  }

  OpenAPIExample() {
    return {
      onEnter: (node, definition, ctx) => ctx.validateFields(this.config, this.rule, this.validators)
    };
  }

}

module.exports = ValidateOpenAPIExample;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy92aXNpdG9ycy9ydWxlcy9zdHJ1Y3R1cmFsL3ZhbGlkYXRlT3BlbkFQSUV4YW1wbGUuanMiXSwibmFtZXMiOlsiVmFsaWRhdGVPcGVuQVBJRXhhbXBsZSIsInJ1bGUiLCJ2YWxpZGF0b3JzIiwidmFsdWUiLCJub2RlIiwiY3R4IiwiZXh0ZXJuYWxWYWx1ZSIsImNyZWF0ZUVycm9yIiwibWVzc2FnZUhlbHBlcnMiLCJtdXR1YWxseUV4Y2x1c2l2ZUZpZWxkc01lc3NhZ2VIZWxwZXIiLCJmaWVsZFR5cGVNaXNtYXRjaE1lc3NhZ2VIZWxwZXIiLCJkZXNjcmlwdGlvbiIsInN1bW1hcnkiLCJPcGVuQVBJRXhhbXBsZSIsIm9uRW50ZXIiLCJkZWZpbml0aW9uIiwidmFsaWRhdGVGaWVsZHMiLCJjb25maWciLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLE1BQU1BLHNCQUFOLENBQTZCO0FBQzNCLGFBQVdDLElBQVgsR0FBa0I7QUFDaEIsV0FBTyxxQkFBUDtBQUNEOztBQUVELE1BQUlDLFVBQUosR0FBaUI7QUFDZixXQUFPO0FBQ0xDLE1BQUFBLEtBQUssQ0FBQ0MsSUFBRCxFQUFPQyxHQUFQLEVBQVk7QUFDZixZQUFJRCxJQUFJLENBQUNELEtBQUwsSUFBY0MsSUFBSSxDQUFDRSxhQUF2QixFQUFzQztBQUNwQyxpQkFBT0QsR0FBRyxDQUFDRSxXQUFKLENBQWdCRixHQUFHLENBQUNHLGNBQUosQ0FBbUJDLG9DQUFuQixDQUF3RCxDQUFDLE9BQUQsRUFBVSxlQUFWLENBQXhELENBQWhCLEVBQXFHLEtBQXJHLENBQVA7QUFDRDs7QUFDRCxlQUFPLElBQVA7QUFDRCxPQU5JOztBQU9MSCxNQUFBQSxhQUFhLENBQUNGLElBQUQsRUFBT0MsR0FBUCxFQUFZO0FBQ3ZCLFlBQUlELElBQUksQ0FBQ0UsYUFBTCxJQUFzQixPQUFPRixJQUFJLENBQUNFLGFBQVosS0FBOEIsUUFBeEQsRUFBa0U7QUFDaEUsaUJBQU9ELEdBQUcsQ0FBQ0UsV0FBSixDQUFnQkYsR0FBRyxDQUFDRyxjQUFKLENBQW1CRSw4QkFBbkIsQ0FBa0QsUUFBbEQsQ0FBaEIsRUFBNkUsT0FBN0UsQ0FBUDtBQUNEOztBQUNELFlBQUlOLElBQUksQ0FBQ0QsS0FBTCxJQUFjQyxJQUFJLENBQUNFLGFBQXZCLEVBQXNDO0FBQ3BDLGlCQUFPRCxHQUFHLENBQUNFLFdBQUosQ0FBZ0JGLEdBQUcsQ0FBQ0csY0FBSixDQUFtQkMsb0NBQW5CLENBQXdELENBQUMsT0FBRCxFQUFVLGVBQVYsQ0FBeEQsQ0FBaEIsRUFBcUcsS0FBckcsQ0FBUDtBQUNEOztBQUNELGVBQU8sSUFBUDtBQUNELE9BZkk7O0FBZ0JMRSxNQUFBQSxXQUFXLENBQUNQLElBQUQsRUFBT0MsR0FBUCxFQUFZO0FBQ3JCLFlBQUlELElBQUksQ0FBQ08sV0FBTCxJQUFvQixPQUFPUCxJQUFJLENBQUNPLFdBQVosS0FBNEIsUUFBcEQsRUFBOEQ7QUFDNUQsaUJBQU9OLEdBQUcsQ0FBQ0UsV0FBSixDQUFnQkYsR0FBRyxDQUFDRyxjQUFKLENBQW1CRSw4QkFBbkIsQ0FBa0QsUUFBbEQsQ0FBaEIsRUFBNkUsT0FBN0UsQ0FBUDtBQUNEOztBQUNELGVBQU8sSUFBUDtBQUNELE9BckJJOztBQXNCTEUsTUFBQUEsT0FBTyxDQUFDUixJQUFELEVBQU9DLEdBQVAsRUFBWTtBQUNqQixZQUFJRCxJQUFJLENBQUNRLE9BQUwsSUFBZ0IsT0FBT1IsSUFBSSxDQUFDUSxPQUFaLEtBQXdCLFFBQTVDLEVBQXNEO0FBQ3BELGlCQUFPUCxHQUFHLENBQUNFLFdBQUosQ0FBZ0JGLEdBQUcsQ0FBQ0csY0FBSixDQUFtQkUsOEJBQW5CLENBQWtELFFBQWxELENBQWhCLEVBQTZFLE9BQTdFLENBQVA7QUFDRDs7QUFDRCxlQUFPLElBQVA7QUFDRDs7QUEzQkksS0FBUDtBQTZCRDs7QUFFREcsRUFBQUEsY0FBYyxHQUFHO0FBQ2YsV0FBTztBQUNMQyxNQUFBQSxPQUFPLEVBQUUsQ0FBQ1YsSUFBRCxFQUFPVyxVQUFQLEVBQW1CVixHQUFuQixLQUEyQkEsR0FBRyxDQUFDVyxjQUFKLENBQ2xDLEtBQUtDLE1BRDZCLEVBQ3JCLEtBQUtoQixJQURnQixFQUNWLEtBQUtDLFVBREs7QUFEL0IsS0FBUDtBQUtEOztBQTNDMEI7O0FBOEM3QmdCLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQm5CLHNCQUFqQiIsInNvdXJjZXNDb250ZW50IjpbImNsYXNzIFZhbGlkYXRlT3BlbkFQSUV4YW1wbGUge1xuICBzdGF0aWMgZ2V0IHJ1bGUoKSB7XG4gICAgcmV0dXJuICdvYXMzLXNjaGVtYS9leGFtcGxlJztcbiAgfVxuXG4gIGdldCB2YWxpZGF0b3JzKCkge1xuICAgIHJldHVybiB7XG4gICAgICB2YWx1ZShub2RlLCBjdHgpIHtcbiAgICAgICAgaWYgKG5vZGUudmFsdWUgJiYgbm9kZS5leHRlcm5hbFZhbHVlKSB7XG4gICAgICAgICAgcmV0dXJuIGN0eC5jcmVhdGVFcnJvcihjdHgubWVzc2FnZUhlbHBlcnMubXV0dWFsbHlFeGNsdXNpdmVGaWVsZHNNZXNzYWdlSGVscGVyKFsndmFsdWUnLCAnZXh0ZXJuYWxWYWx1ZSddKSwgJ2tleScpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgICAgfSxcbiAgICAgIGV4dGVybmFsVmFsdWUobm9kZSwgY3R4KSB7XG4gICAgICAgIGlmIChub2RlLmV4dGVybmFsVmFsdWUgJiYgdHlwZW9mIG5vZGUuZXh0ZXJuYWxWYWx1ZSAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgICByZXR1cm4gY3R4LmNyZWF0ZUVycm9yKGN0eC5tZXNzYWdlSGVscGVycy5maWVsZFR5cGVNaXNtYXRjaE1lc3NhZ2VIZWxwZXIoJ3N0cmluZycpLCAndmFsdWUnKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAobm9kZS52YWx1ZSAmJiBub2RlLmV4dGVybmFsVmFsdWUpIHtcbiAgICAgICAgICByZXR1cm4gY3R4LmNyZWF0ZUVycm9yKGN0eC5tZXNzYWdlSGVscGVycy5tdXR1YWxseUV4Y2x1c2l2ZUZpZWxkc01lc3NhZ2VIZWxwZXIoWyd2YWx1ZScsICdleHRlcm5hbFZhbHVlJ10pLCAna2V5Jyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICB9LFxuICAgICAgZGVzY3JpcHRpb24obm9kZSwgY3R4KSB7XG4gICAgICAgIGlmIChub2RlLmRlc2NyaXB0aW9uICYmIHR5cGVvZiBub2RlLmRlc2NyaXB0aW9uICE9PSAnc3RyaW5nJykge1xuICAgICAgICAgIHJldHVybiBjdHguY3JlYXRlRXJyb3IoY3R4Lm1lc3NhZ2VIZWxwZXJzLmZpZWxkVHlwZU1pc21hdGNoTWVzc2FnZUhlbHBlcignc3RyaW5nJyksICd2YWx1ZScpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgICAgfSxcbiAgICAgIHN1bW1hcnkobm9kZSwgY3R4KSB7XG4gICAgICAgIGlmIChub2RlLnN1bW1hcnkgJiYgdHlwZW9mIG5vZGUuc3VtbWFyeSAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgICByZXR1cm4gY3R4LmNyZWF0ZUVycm9yKGN0eC5tZXNzYWdlSGVscGVycy5maWVsZFR5cGVNaXNtYXRjaE1lc3NhZ2VIZWxwZXIoJ3N0cmluZycpLCAndmFsdWUnKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgIH0sXG4gICAgfTtcbiAgfVxuXG4gIE9wZW5BUElFeGFtcGxlKCkge1xuICAgIHJldHVybiB7XG4gICAgICBvbkVudGVyOiAobm9kZSwgZGVmaW5pdGlvbiwgY3R4KSA9PiBjdHgudmFsaWRhdGVGaWVsZHMoXG4gICAgICAgIHRoaXMuY29uZmlnLCB0aGlzLnJ1bGUsIHRoaXMudmFsaWRhdG9ycyxcbiAgICAgICksXG4gICAgfTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IFZhbGlkYXRlT3BlbkFQSUV4YW1wbGU7XG4iXX0=