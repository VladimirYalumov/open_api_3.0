"use strict";

class ValidateOpenAPIMediaObject {
  static get rule() {
    return 'oas3-schema/media-object';
  }

  get validators() {
    return {
      example(node, ctx) {
        return node.example && node.examples ? ctx.createError(ctx.messageHelpers.mutuallyExclusiveFieldsMessageHelper(['example', 'examples']), 'key') : null;
      },

      examples(node, ctx) {
        return node.example && node.examples ? ctx.createError(ctx.messageHelpers.mutuallyExclusiveFieldsMessageHelper(['examples', 'example']), 'key') : null;
      }

    };
  }

  OpenAPIMediaObject() {
    return {
      onEnter: (node, definition, ctx) => ctx.validateFields(this.config, this.rule, this.validators)
    };
  }

}

module.exports = ValidateOpenAPIMediaObject;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy92aXNpdG9ycy9ydWxlcy9zdHJ1Y3R1cmFsL3ZhbGlkYXRlT3BlbkFQSU1lZGlhT2JqZWN0LmpzIl0sIm5hbWVzIjpbIlZhbGlkYXRlT3BlbkFQSU1lZGlhT2JqZWN0IiwicnVsZSIsInZhbGlkYXRvcnMiLCJleGFtcGxlIiwibm9kZSIsImN0eCIsImV4YW1wbGVzIiwiY3JlYXRlRXJyb3IiLCJtZXNzYWdlSGVscGVycyIsIm11dHVhbGx5RXhjbHVzaXZlRmllbGRzTWVzc2FnZUhlbHBlciIsIk9wZW5BUElNZWRpYU9iamVjdCIsIm9uRW50ZXIiLCJkZWZpbml0aW9uIiwidmFsaWRhdGVGaWVsZHMiLCJjb25maWciLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLE1BQU1BLDBCQUFOLENBQWlDO0FBQy9CLGFBQVdDLElBQVgsR0FBa0I7QUFDaEIsV0FBTywwQkFBUDtBQUNEOztBQUVELE1BQUlDLFVBQUosR0FBaUI7QUFDZixXQUFPO0FBQ0xDLE1BQUFBLE9BQU8sQ0FBQ0MsSUFBRCxFQUFPQyxHQUFQLEVBQVk7QUFDakIsZUFBT0QsSUFBSSxDQUFDRCxPQUFMLElBQWdCQyxJQUFJLENBQUNFLFFBQXJCLEdBQWdDRCxHQUFHLENBQUNFLFdBQUosQ0FBZ0JGLEdBQUcsQ0FBQ0csY0FBSixDQUFtQkMsb0NBQW5CLENBQXdELENBQUMsU0FBRCxFQUFZLFVBQVosQ0FBeEQsQ0FBaEIsRUFBa0csS0FBbEcsQ0FBaEMsR0FBMkksSUFBbEo7QUFDRCxPQUhJOztBQUlMSCxNQUFBQSxRQUFRLENBQUNGLElBQUQsRUFBT0MsR0FBUCxFQUFZO0FBQ2xCLGVBQU9ELElBQUksQ0FBQ0QsT0FBTCxJQUFnQkMsSUFBSSxDQUFDRSxRQUFyQixHQUFnQ0QsR0FBRyxDQUFDRSxXQUFKLENBQWdCRixHQUFHLENBQUNHLGNBQUosQ0FBbUJDLG9DQUFuQixDQUF3RCxDQUFDLFVBQUQsRUFBYSxTQUFiLENBQXhELENBQWhCLEVBQWtHLEtBQWxHLENBQWhDLEdBQTJJLElBQWxKO0FBQ0Q7O0FBTkksS0FBUDtBQVFEOztBQUVEQyxFQUFBQSxrQkFBa0IsR0FBRztBQUNuQixXQUFPO0FBQ0xDLE1BQUFBLE9BQU8sRUFBRSxDQUFDUCxJQUFELEVBQU9RLFVBQVAsRUFBbUJQLEdBQW5CLEtBQTJCQSxHQUFHLENBQUNRLGNBQUosQ0FDbEMsS0FBS0MsTUFENkIsRUFDckIsS0FBS2IsSUFEZ0IsRUFDVixLQUFLQyxVQURLO0FBRC9CLEtBQVA7QUFLRDs7QUF0QjhCOztBQXlCakNhLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmhCLDBCQUFqQiIsInNvdXJjZXNDb250ZW50IjpbImNsYXNzIFZhbGlkYXRlT3BlbkFQSU1lZGlhT2JqZWN0IHtcbiAgc3RhdGljIGdldCBydWxlKCkge1xuICAgIHJldHVybiAnb2FzMy1zY2hlbWEvbWVkaWEtb2JqZWN0JztcbiAgfVxuXG4gIGdldCB2YWxpZGF0b3JzKCkge1xuICAgIHJldHVybiB7XG4gICAgICBleGFtcGxlKG5vZGUsIGN0eCkge1xuICAgICAgICByZXR1cm4gbm9kZS5leGFtcGxlICYmIG5vZGUuZXhhbXBsZXMgPyBjdHguY3JlYXRlRXJyb3IoY3R4Lm1lc3NhZ2VIZWxwZXJzLm11dHVhbGx5RXhjbHVzaXZlRmllbGRzTWVzc2FnZUhlbHBlcihbJ2V4YW1wbGUnLCAnZXhhbXBsZXMnXSksICdrZXknKSA6IG51bGw7XG4gICAgICB9LFxuICAgICAgZXhhbXBsZXMobm9kZSwgY3R4KSB7XG4gICAgICAgIHJldHVybiBub2RlLmV4YW1wbGUgJiYgbm9kZS5leGFtcGxlcyA/IGN0eC5jcmVhdGVFcnJvcihjdHgubWVzc2FnZUhlbHBlcnMubXV0dWFsbHlFeGNsdXNpdmVGaWVsZHNNZXNzYWdlSGVscGVyKFsnZXhhbXBsZXMnLCAnZXhhbXBsZSddKSwgJ2tleScpIDogbnVsbDtcbiAgICAgIH0sXG4gICAgfTtcbiAgfVxuXG4gIE9wZW5BUElNZWRpYU9iamVjdCgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgb25FbnRlcjogKG5vZGUsIGRlZmluaXRpb24sIGN0eCkgPT4gY3R4LnZhbGlkYXRlRmllbGRzKFxuICAgICAgICB0aGlzLmNvbmZpZywgdGhpcy5ydWxlLCB0aGlzLnZhbGlkYXRvcnMsXG4gICAgICApLFxuICAgIH07XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBWYWxpZGF0ZU9wZW5BUElNZWRpYU9iamVjdDtcbiJdfQ==