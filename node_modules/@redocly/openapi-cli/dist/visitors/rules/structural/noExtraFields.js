"use strict";

var _utils = require("../../../utils");

class NoExtraFields {
  static get rule() {
    return 'no-extra-fields';
  }

  any() {
    return {
      onEnter: (node, definition, ctx) => {
        const errors = [];
        const allowedChildren = [];

        if (definition.properties) {
          switch (typeof definition.properties) {
            case 'object':
              allowedChildren.push(...Object.keys(definition.properties));
              break;

            case 'function':
              allowedChildren.push(...Object.keys(definition.properties(node)));
              break;

            default: // do-nothing

          }
        }

        if (allowedChildren.length > 0 && typeof node !== 'object') {
          errors.push(ctx.createError(ctx.messageHelpers.fieldTypeMismatchMessageHelper(definition.name), 'value'));
          return errors;
        }

        Object.keys(node).forEach(field => {
          ctx.path.push(field);

          if (!allowedChildren.includes(field) && field.indexOf('x-') !== 0 && field !== '$ref') {
            const possibleAlternate = (0, _utils.getClosestString)(field, allowedChildren);
            errors.push(ctx.createError(ctx.messageHelpers.fieldNotAllowedMessageHelper(field, definition.name), 'key', {
              possibleAlternate
            }));
          }

          ctx.path.pop();
        });
        return errors;
      }
    };
  }

}

module.exports = NoExtraFields;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy92aXNpdG9ycy9ydWxlcy9zdHJ1Y3R1cmFsL25vRXh0cmFGaWVsZHMuanMiXSwibmFtZXMiOlsiTm9FeHRyYUZpZWxkcyIsInJ1bGUiLCJhbnkiLCJvbkVudGVyIiwibm9kZSIsImRlZmluaXRpb24iLCJjdHgiLCJlcnJvcnMiLCJhbGxvd2VkQ2hpbGRyZW4iLCJwcm9wZXJ0aWVzIiwicHVzaCIsIk9iamVjdCIsImtleXMiLCJsZW5ndGgiLCJjcmVhdGVFcnJvciIsIm1lc3NhZ2VIZWxwZXJzIiwiZmllbGRUeXBlTWlzbWF0Y2hNZXNzYWdlSGVscGVyIiwibmFtZSIsImZvckVhY2giLCJmaWVsZCIsInBhdGgiLCJpbmNsdWRlcyIsImluZGV4T2YiLCJwb3NzaWJsZUFsdGVybmF0ZSIsImZpZWxkTm90QWxsb3dlZE1lc3NhZ2VIZWxwZXIiLCJwb3AiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUVBLE1BQU1BLGFBQU4sQ0FBb0I7QUFDbEIsYUFBV0MsSUFBWCxHQUFrQjtBQUNoQixXQUFPLGlCQUFQO0FBQ0Q7O0FBRURDLEVBQUFBLEdBQUcsR0FBRztBQUNKLFdBQU87QUFDTEMsTUFBQUEsT0FBTyxFQUFFLENBQUNDLElBQUQsRUFBT0MsVUFBUCxFQUFtQkMsR0FBbkIsS0FBMkI7QUFDbEMsY0FBTUMsTUFBTSxHQUFHLEVBQWY7QUFDQSxjQUFNQyxlQUFlLEdBQUcsRUFBeEI7O0FBRUEsWUFBSUgsVUFBVSxDQUFDSSxVQUFmLEVBQTJCO0FBQ3pCLGtCQUFRLE9BQU9KLFVBQVUsQ0FBQ0ksVUFBMUI7QUFDRSxpQkFBSyxRQUFMO0FBQ0VELGNBQUFBLGVBQWUsQ0FBQ0UsSUFBaEIsQ0FBcUIsR0FBR0MsTUFBTSxDQUFDQyxJQUFQLENBQVlQLFVBQVUsQ0FBQ0ksVUFBdkIsQ0FBeEI7QUFDQTs7QUFDRixpQkFBSyxVQUFMO0FBQ0VELGNBQUFBLGVBQWUsQ0FBQ0UsSUFBaEIsQ0FBcUIsR0FBR0MsTUFBTSxDQUFDQyxJQUFQLENBQVlQLFVBQVUsQ0FBQ0ksVUFBWCxDQUFzQkwsSUFBdEIsQ0FBWixDQUF4QjtBQUNBOztBQUNGLG9CQVBGLENBUU07O0FBUk47QUFVRDs7QUFFRCxZQUFJSSxlQUFlLENBQUNLLE1BQWhCLEdBQXlCLENBQXpCLElBQThCLE9BQU9ULElBQVAsS0FBZ0IsUUFBbEQsRUFBNEQ7QUFDMURHLFVBQUFBLE1BQU0sQ0FBQ0csSUFBUCxDQUNFSixHQUFHLENBQUNRLFdBQUosQ0FBZ0JSLEdBQUcsQ0FBQ1MsY0FBSixDQUFtQkMsOEJBQW5CLENBQWtEWCxVQUFVLENBQUNZLElBQTdELENBQWhCLEVBQW9GLE9BQXBGLENBREY7QUFHQSxpQkFBT1YsTUFBUDtBQUNEOztBQUVESSxRQUFBQSxNQUFNLENBQUNDLElBQVAsQ0FBWVIsSUFBWixFQUFrQmMsT0FBbEIsQ0FBMkJDLEtBQUQsSUFBVztBQUNuQ2IsVUFBQUEsR0FBRyxDQUFDYyxJQUFKLENBQVNWLElBQVQsQ0FBY1MsS0FBZDs7QUFFQSxjQUFJLENBQUNYLGVBQWUsQ0FBQ2EsUUFBaEIsQ0FBeUJGLEtBQXpCLENBQUQsSUFBb0NBLEtBQUssQ0FBQ0csT0FBTixDQUFjLElBQWQsTUFBd0IsQ0FBNUQsSUFBaUVILEtBQUssS0FBSyxNQUEvRSxFQUF1RjtBQUNyRixrQkFBTUksaUJBQWlCLEdBQUcsNkJBQWlCSixLQUFqQixFQUF3QlgsZUFBeEIsQ0FBMUI7QUFDQUQsWUFBQUEsTUFBTSxDQUFDRyxJQUFQLENBQ0VKLEdBQUcsQ0FBQ1EsV0FBSixDQUFnQlIsR0FBRyxDQUFDUyxjQUFKLENBQW1CUyw0QkFBbkIsQ0FBZ0RMLEtBQWhELEVBQXVEZCxVQUFVLENBQUNZLElBQWxFLENBQWhCLEVBQXlGLEtBQXpGLEVBQWdHO0FBQUVNLGNBQUFBO0FBQUYsYUFBaEcsQ0FERjtBQUdEOztBQUVEakIsVUFBQUEsR0FBRyxDQUFDYyxJQUFKLENBQVNLLEdBQVQ7QUFDRCxTQVhEO0FBWUEsZUFBT2xCLE1BQVA7QUFDRDtBQXRDSSxLQUFQO0FBd0NEOztBQTlDaUI7O0FBaURwQm1CLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjNCLGFBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0Q2xvc2VzdFN0cmluZyB9IGZyb20gJy4uLy4uLy4uL3V0aWxzJztcblxuY2xhc3MgTm9FeHRyYUZpZWxkcyB7XG4gIHN0YXRpYyBnZXQgcnVsZSgpIHtcbiAgICByZXR1cm4gJ25vLWV4dHJhLWZpZWxkcyc7XG4gIH1cblxuICBhbnkoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG9uRW50ZXI6IChub2RlLCBkZWZpbml0aW9uLCBjdHgpID0+IHtcbiAgICAgICAgY29uc3QgZXJyb3JzID0gW107XG4gICAgICAgIGNvbnN0IGFsbG93ZWRDaGlsZHJlbiA9IFtdO1xuXG4gICAgICAgIGlmIChkZWZpbml0aW9uLnByb3BlcnRpZXMpIHtcbiAgICAgICAgICBzd2l0Y2ggKHR5cGVvZiBkZWZpbml0aW9uLnByb3BlcnRpZXMpIHtcbiAgICAgICAgICAgIGNhc2UgJ29iamVjdCc6XG4gICAgICAgICAgICAgIGFsbG93ZWRDaGlsZHJlbi5wdXNoKC4uLk9iamVjdC5rZXlzKGRlZmluaXRpb24ucHJvcGVydGllcykpO1xuICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ2Z1bmN0aW9uJzpcbiAgICAgICAgICAgICAgYWxsb3dlZENoaWxkcmVuLnB1c2goLi4uT2JqZWN0LmtleXMoZGVmaW5pdGlvbi5wcm9wZXJ0aWVzKG5vZGUpKSk7XG4gICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAvLyBkby1ub3RoaW5nXG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGFsbG93ZWRDaGlsZHJlbi5sZW5ndGggPiAwICYmIHR5cGVvZiBub2RlICE9PSAnb2JqZWN0Jykge1xuICAgICAgICAgIGVycm9ycy5wdXNoKFxuICAgICAgICAgICAgY3R4LmNyZWF0ZUVycm9yKGN0eC5tZXNzYWdlSGVscGVycy5maWVsZFR5cGVNaXNtYXRjaE1lc3NhZ2VIZWxwZXIoZGVmaW5pdGlvbi5uYW1lKSwgJ3ZhbHVlJyksXG4gICAgICAgICAgKTtcbiAgICAgICAgICByZXR1cm4gZXJyb3JzO1xuICAgICAgICB9XG5cbiAgICAgICAgT2JqZWN0LmtleXMobm9kZSkuZm9yRWFjaCgoZmllbGQpID0+IHtcbiAgICAgICAgICBjdHgucGF0aC5wdXNoKGZpZWxkKTtcblxuICAgICAgICAgIGlmICghYWxsb3dlZENoaWxkcmVuLmluY2x1ZGVzKGZpZWxkKSAmJiBmaWVsZC5pbmRleE9mKCd4LScpICE9PSAwICYmIGZpZWxkICE9PSAnJHJlZicpIHtcbiAgICAgICAgICAgIGNvbnN0IHBvc3NpYmxlQWx0ZXJuYXRlID0gZ2V0Q2xvc2VzdFN0cmluZyhmaWVsZCwgYWxsb3dlZENoaWxkcmVuKTtcbiAgICAgICAgICAgIGVycm9ycy5wdXNoKFxuICAgICAgICAgICAgICBjdHguY3JlYXRlRXJyb3IoY3R4Lm1lc3NhZ2VIZWxwZXJzLmZpZWxkTm90QWxsb3dlZE1lc3NhZ2VIZWxwZXIoZmllbGQsIGRlZmluaXRpb24ubmFtZSksICdrZXknLCB7IHBvc3NpYmxlQWx0ZXJuYXRlIH0pLFxuICAgICAgICAgICAgKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBjdHgucGF0aC5wb3AoKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBlcnJvcnM7XG4gICAgICB9LFxuICAgIH07XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBOb0V4dHJhRmllbGRzO1xuIl19