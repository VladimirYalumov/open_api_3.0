"use strict";

class ValidateOpenAPIRoot {
  static get rule() {
    return 'oas3-schema/root';
  }

  get validators() {
    return {
      openapi(node, ctx) {
        if (node && !node.openapi) return ctx.createError(ctx.messageHelpers.missingRequiredField('openapi'), 'key');
        return null;
      },

      info(node, ctx) {
        if (node && !node.info) return ctx.createError(ctx.messageHelpers.missingRequiredField('info'), 'key');
        return null;
      },

      paths(node, ctx) {
        if (node && !node.paths) return ctx.createError(ctx.messageHelpers.missingRequiredField('paths'), 'key');
        return null;
      },

      security: () => null
    };
  }

  OpenAPIRoot() {
    return {
      onEnter: (node, definition, ctx) => ctx.validateFields(this.config, this.rule, this.validators)
    };
  }

}

module.exports = ValidateOpenAPIRoot;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy92aXNpdG9ycy9ydWxlcy9zdHJ1Y3R1cmFsL3ZhbGlkYXRlT3BlbkFQSVJvb3QuanMiXSwibmFtZXMiOlsiVmFsaWRhdGVPcGVuQVBJUm9vdCIsInJ1bGUiLCJ2YWxpZGF0b3JzIiwib3BlbmFwaSIsIm5vZGUiLCJjdHgiLCJjcmVhdGVFcnJvciIsIm1lc3NhZ2VIZWxwZXJzIiwibWlzc2luZ1JlcXVpcmVkRmllbGQiLCJpbmZvIiwicGF0aHMiLCJzZWN1cml0eSIsIk9wZW5BUElSb290Iiwib25FbnRlciIsImRlZmluaXRpb24iLCJ2YWxpZGF0ZUZpZWxkcyIsImNvbmZpZyIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUEsTUFBTUEsbUJBQU4sQ0FBMEI7QUFDeEIsYUFBV0MsSUFBWCxHQUFrQjtBQUNoQixXQUFPLGtCQUFQO0FBQ0Q7O0FBRUQsTUFBSUMsVUFBSixHQUFpQjtBQUNmLFdBQU87QUFDTEMsTUFBQUEsT0FBTyxDQUFDQyxJQUFELEVBQU9DLEdBQVAsRUFBWTtBQUNqQixZQUFJRCxJQUFJLElBQUksQ0FBQ0EsSUFBSSxDQUFDRCxPQUFsQixFQUEyQixPQUFPRSxHQUFHLENBQUNDLFdBQUosQ0FBZ0JELEdBQUcsQ0FBQ0UsY0FBSixDQUFtQkMsb0JBQW5CLENBQXdDLFNBQXhDLENBQWhCLEVBQW9FLEtBQXBFLENBQVA7QUFDM0IsZUFBTyxJQUFQO0FBQ0QsT0FKSTs7QUFLTEMsTUFBQUEsSUFBSSxDQUFDTCxJQUFELEVBQU9DLEdBQVAsRUFBWTtBQUNkLFlBQUlELElBQUksSUFBSSxDQUFDQSxJQUFJLENBQUNLLElBQWxCLEVBQXdCLE9BQU9KLEdBQUcsQ0FBQ0MsV0FBSixDQUFnQkQsR0FBRyxDQUFDRSxjQUFKLENBQW1CQyxvQkFBbkIsQ0FBd0MsTUFBeEMsQ0FBaEIsRUFBaUUsS0FBakUsQ0FBUDtBQUN4QixlQUFPLElBQVA7QUFDRCxPQVJJOztBQVNMRSxNQUFBQSxLQUFLLENBQUNOLElBQUQsRUFBT0MsR0FBUCxFQUFZO0FBQ2YsWUFBSUQsSUFBSSxJQUFJLENBQUNBLElBQUksQ0FBQ00sS0FBbEIsRUFBeUIsT0FBT0wsR0FBRyxDQUFDQyxXQUFKLENBQWdCRCxHQUFHLENBQUNFLGNBQUosQ0FBbUJDLG9CQUFuQixDQUF3QyxPQUF4QyxDQUFoQixFQUFrRSxLQUFsRSxDQUFQO0FBQ3pCLGVBQU8sSUFBUDtBQUNELE9BWkk7O0FBYUxHLE1BQUFBLFFBQVEsRUFBRSxNQUFNO0FBYlgsS0FBUDtBQWVEOztBQUVEQyxFQUFBQSxXQUFXLEdBQUc7QUFDWixXQUFPO0FBQ0xDLE1BQUFBLE9BQU8sRUFBRSxDQUFDVCxJQUFELEVBQU9VLFVBQVAsRUFBbUJULEdBQW5CLEtBQTJCQSxHQUFHLENBQUNVLGNBQUosQ0FDbEMsS0FBS0MsTUFENkIsRUFDckIsS0FBS2YsSUFEZ0IsRUFDVixLQUFLQyxVQURLO0FBRC9CLEtBQVA7QUFLRDs7QUE3QnVCOztBQWdDMUJlLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmxCLG1CQUFqQiIsInNvdXJjZXNDb250ZW50IjpbImNsYXNzIFZhbGlkYXRlT3BlbkFQSVJvb3Qge1xuICBzdGF0aWMgZ2V0IHJ1bGUoKSB7XG4gICAgcmV0dXJuICdvYXMzLXNjaGVtYS9yb290JztcbiAgfVxuXG4gIGdldCB2YWxpZGF0b3JzKCkge1xuICAgIHJldHVybiB7XG4gICAgICBvcGVuYXBpKG5vZGUsIGN0eCkge1xuICAgICAgICBpZiAobm9kZSAmJiAhbm9kZS5vcGVuYXBpKSByZXR1cm4gY3R4LmNyZWF0ZUVycm9yKGN0eC5tZXNzYWdlSGVscGVycy5taXNzaW5nUmVxdWlyZWRGaWVsZCgnb3BlbmFwaScpLCAna2V5Jyk7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgICAgfSxcbiAgICAgIGluZm8obm9kZSwgY3R4KSB7XG4gICAgICAgIGlmIChub2RlICYmICFub2RlLmluZm8pIHJldHVybiBjdHguY3JlYXRlRXJyb3IoY3R4Lm1lc3NhZ2VIZWxwZXJzLm1pc3NpbmdSZXF1aXJlZEZpZWxkKCdpbmZvJyksICdrZXknKTtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICB9LFxuICAgICAgcGF0aHMobm9kZSwgY3R4KSB7XG4gICAgICAgIGlmIChub2RlICYmICFub2RlLnBhdGhzKSByZXR1cm4gY3R4LmNyZWF0ZUVycm9yKGN0eC5tZXNzYWdlSGVscGVycy5taXNzaW5nUmVxdWlyZWRGaWVsZCgncGF0aHMnKSwgJ2tleScpO1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgIH0sXG4gICAgICBzZWN1cml0eTogKCkgPT4gbnVsbCxcbiAgICB9O1xuICB9XG5cbiAgT3BlbkFQSVJvb3QoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG9uRW50ZXI6IChub2RlLCBkZWZpbml0aW9uLCBjdHgpID0+IGN0eC52YWxpZGF0ZUZpZWxkcyhcbiAgICAgICAgdGhpcy5jb25maWcsIHRoaXMucnVsZSwgdGhpcy52YWxpZGF0b3JzLFxuICAgICAgKSxcbiAgICB9O1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gVmFsaWRhdGVPcGVuQVBJUm9vdDtcbiJdfQ==