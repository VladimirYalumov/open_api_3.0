"use strict";

const validateNode = (node, ctx, name) => {
  const errors = [];
  const names = Object.keys(node);

  for (let i = 0; i < names.length; i++) {
    if (names[i].indexOf('_') > 0) {
      ctx.path.push(names[i]);
      const error = ctx.createError(`${name}'s names should be in camelCase.`, 'key');
      errors.push(error);
      ctx.path.pop();
    }
  }

  return errors;
};

class CamelCaseNames {
  constructor(config) {
    this.config = config;
    this.pattern = new RegExp('^_?[a-zA-Z](([^_]*[a-zA-Z]*)*)');
  }

  static get rule() {
    return 'camel-case-names';
  }

  OpenAPISchemaMap() {
    return {
      onEnter: (node, _, ctx) => validateNode(node, ctx, 'Schema')
    };
  }

  OpenAPIParameterMap() {
    return {
      onEnter: (node, _, ctx) => validateNode(node, ctx, 'Parameter')
    };
  }

}

module.exports = CamelCaseNames;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy92aXNpdG9ycy9ydWxlcy9zZW1hbnRpYy9jYW1lbC1jYXNlLW5hbWVzLmpzIl0sIm5hbWVzIjpbInZhbGlkYXRlTm9kZSIsIm5vZGUiLCJjdHgiLCJuYW1lIiwiZXJyb3JzIiwibmFtZXMiLCJPYmplY3QiLCJrZXlzIiwiaSIsImxlbmd0aCIsImluZGV4T2YiLCJwYXRoIiwicHVzaCIsImVycm9yIiwiY3JlYXRlRXJyb3IiLCJwb3AiLCJDYW1lbENhc2VOYW1lcyIsImNvbnN0cnVjdG9yIiwiY29uZmlnIiwicGF0dGVybiIsIlJlZ0V4cCIsInJ1bGUiLCJPcGVuQVBJU2NoZW1hTWFwIiwib25FbnRlciIsIl8iLCJPcGVuQVBJUGFyYW1ldGVyTWFwIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxNQUFNQSxZQUFZLEdBQUcsQ0FBQ0MsSUFBRCxFQUFPQyxHQUFQLEVBQVlDLElBQVosS0FBcUI7QUFDeEMsUUFBTUMsTUFBTSxHQUFHLEVBQWY7QUFDQSxRQUFNQyxLQUFLLEdBQUdDLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZTixJQUFaLENBQWQ7O0FBQ0EsT0FBSyxJQUFJTyxDQUFDLEdBQUcsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHSCxLQUFLLENBQUNJLE1BQTFCLEVBQWtDRCxDQUFDLEVBQW5DLEVBQXVDO0FBQ3JDLFFBQUlILEtBQUssQ0FBQ0csQ0FBRCxDQUFMLENBQVNFLE9BQVQsQ0FBaUIsR0FBakIsSUFBd0IsQ0FBNUIsRUFBK0I7QUFDN0JSLE1BQUFBLEdBQUcsQ0FBQ1MsSUFBSixDQUFTQyxJQUFULENBQWNQLEtBQUssQ0FBQ0csQ0FBRCxDQUFuQjtBQUNBLFlBQU1LLEtBQUssR0FBR1gsR0FBRyxDQUFDWSxXQUFKLENBQWlCLEdBQUVYLElBQUssa0NBQXhCLEVBQTJELEtBQTNELENBQWQ7QUFDQUMsTUFBQUEsTUFBTSxDQUFDUSxJQUFQLENBQVlDLEtBQVo7QUFDQVgsTUFBQUEsR0FBRyxDQUFDUyxJQUFKLENBQVNJLEdBQVQ7QUFDRDtBQUNGOztBQUNELFNBQU9YLE1BQVA7QUFDRCxDQVpEOztBQWNBLE1BQU1ZLGNBQU4sQ0FBcUI7QUFDbkJDLEVBQUFBLFdBQVcsQ0FBQ0MsTUFBRCxFQUFTO0FBQ2xCLFNBQUtBLE1BQUwsR0FBY0EsTUFBZDtBQUNBLFNBQUtDLE9BQUwsR0FBZSxJQUFJQyxNQUFKLENBQVcsZ0NBQVgsQ0FBZjtBQUNEOztBQUVELGFBQVdDLElBQVgsR0FBa0I7QUFDaEIsV0FBTyxrQkFBUDtBQUNEOztBQUVEQyxFQUFBQSxnQkFBZ0IsR0FBRztBQUNqQixXQUFPO0FBQ0xDLE1BQUFBLE9BQU8sRUFBRSxDQUFDdEIsSUFBRCxFQUFPdUIsQ0FBUCxFQUFVdEIsR0FBVixLQUFrQkYsWUFBWSxDQUFDQyxJQUFELEVBQU9DLEdBQVAsRUFBWSxRQUFaO0FBRGxDLEtBQVA7QUFHRDs7QUFFRHVCLEVBQUFBLG1CQUFtQixHQUFHO0FBQ3BCLFdBQU87QUFDTEYsTUFBQUEsT0FBTyxFQUFFLENBQUN0QixJQUFELEVBQU91QixDQUFQLEVBQVV0QixHQUFWLEtBQWtCRixZQUFZLENBQUNDLElBQUQsRUFBT0MsR0FBUCxFQUFZLFdBQVo7QUFEbEMsS0FBUDtBQUdEOztBQXBCa0I7O0FBdUJyQndCLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQlgsY0FBakIiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB2YWxpZGF0ZU5vZGUgPSAobm9kZSwgY3R4LCBuYW1lKSA9PiB7XG4gIGNvbnN0IGVycm9ycyA9IFtdO1xuICBjb25zdCBuYW1lcyA9IE9iamVjdC5rZXlzKG5vZGUpO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IG5hbWVzLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKG5hbWVzW2ldLmluZGV4T2YoJ18nKSA+IDApIHtcbiAgICAgIGN0eC5wYXRoLnB1c2gobmFtZXNbaV0pO1xuICAgICAgY29uc3QgZXJyb3IgPSBjdHguY3JlYXRlRXJyb3IoYCR7bmFtZX0ncyBuYW1lcyBzaG91bGQgYmUgaW4gY2FtZWxDYXNlLmAsICdrZXknKTtcbiAgICAgIGVycm9ycy5wdXNoKGVycm9yKTtcbiAgICAgIGN0eC5wYXRoLnBvcCgpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gZXJyb3JzO1xufTtcblxuY2xhc3MgQ2FtZWxDYXNlTmFtZXMge1xuICBjb25zdHJ1Y3Rvcihjb25maWcpIHtcbiAgICB0aGlzLmNvbmZpZyA9IGNvbmZpZztcbiAgICB0aGlzLnBhdHRlcm4gPSBuZXcgUmVnRXhwKCdeXz9bYS16QS1aXSgoW15fXSpbYS16QS1aXSopKiknKTtcbiAgfVxuXG4gIHN0YXRpYyBnZXQgcnVsZSgpIHtcbiAgICByZXR1cm4gJ2NhbWVsLWNhc2UtbmFtZXMnO1xuICB9XG5cbiAgT3BlbkFQSVNjaGVtYU1hcCgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgb25FbnRlcjogKG5vZGUsIF8sIGN0eCkgPT4gdmFsaWRhdGVOb2RlKG5vZGUsIGN0eCwgJ1NjaGVtYScpLFxuICAgIH07XG4gIH1cblxuICBPcGVuQVBJUGFyYW1ldGVyTWFwKCkge1xuICAgIHJldHVybiB7XG4gICAgICBvbkVudGVyOiAobm9kZSwgXywgY3R4KSA9PiB2YWxpZGF0ZU5vZGUobm9kZSwgY3R4LCAnUGFyYW1ldGVyJyksXG4gICAgfTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IENhbWVsQ2FzZU5hbWVzO1xuIl19