"use strict";

class Operation2xxResponse {
  static get rule() {
    return 'operation-2xx-response';
  }

  constructor(config) {
    this.config = config;
    this.responseCodes = [];
  }

  OpenAPIOperation() {
    return {
      onExit: (node, definition, ctx) => {
        const errors = [];

        if (!this.responseCodes.find(code => code[0] === '2')) {
          errors.push(ctx.createError('Operation must have at least one 2xx response.', 'key'));
        }

        this.responseCodes = [];
        return errors;
      }
    };
  }

  OpenAPIResponseMap() {
    return {
      onEnter: node => {
        this.responseCodes.push(...Object.keys(node));
      }
    };
  }

}

module.exports = Operation2xxResponse;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy92aXNpdG9ycy9ydWxlcy9zZW1hbnRpYy9vcGVyYXRpb24tMnh4LXJlc3BvbnNlLmpzIl0sIm5hbWVzIjpbIk9wZXJhdGlvbjJ4eFJlc3BvbnNlIiwicnVsZSIsImNvbnN0cnVjdG9yIiwiY29uZmlnIiwicmVzcG9uc2VDb2RlcyIsIk9wZW5BUElPcGVyYXRpb24iLCJvbkV4aXQiLCJub2RlIiwiZGVmaW5pdGlvbiIsImN0eCIsImVycm9ycyIsImZpbmQiLCJjb2RlIiwicHVzaCIsImNyZWF0ZUVycm9yIiwiT3BlbkFQSVJlc3BvbnNlTWFwIiwib25FbnRlciIsIk9iamVjdCIsImtleXMiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLE1BQU1BLG9CQUFOLENBQTJCO0FBQ3pCLGFBQVdDLElBQVgsR0FBa0I7QUFDaEIsV0FBTyx3QkFBUDtBQUNEOztBQUVEQyxFQUFBQSxXQUFXLENBQUNDLE1BQUQsRUFBUztBQUNsQixTQUFLQSxNQUFMLEdBQWNBLE1BQWQ7QUFDQSxTQUFLQyxhQUFMLEdBQXFCLEVBQXJCO0FBQ0Q7O0FBRURDLEVBQUFBLGdCQUFnQixHQUFHO0FBQ2pCLFdBQU87QUFDTEMsTUFBQUEsTUFBTSxFQUFFLENBQUNDLElBQUQsRUFBT0MsVUFBUCxFQUFtQkMsR0FBbkIsS0FBMkI7QUFDakMsY0FBTUMsTUFBTSxHQUFHLEVBQWY7O0FBQ0EsWUFBSSxDQUFDLEtBQUtOLGFBQUwsQ0FBbUJPLElBQW5CLENBQXlCQyxJQUFELElBQVVBLElBQUksQ0FBQyxDQUFELENBQUosS0FBWSxHQUE5QyxDQUFMLEVBQXlEO0FBQ3ZERixVQUFBQSxNQUFNLENBQUNHLElBQVAsQ0FBWUosR0FBRyxDQUFDSyxXQUFKLENBQWdCLGdEQUFoQixFQUFrRSxLQUFsRSxDQUFaO0FBQ0Q7O0FBQ0QsYUFBS1YsYUFBTCxHQUFxQixFQUFyQjtBQUNBLGVBQU9NLE1BQVA7QUFDRDtBQVJJLEtBQVA7QUFVRDs7QUFFREssRUFBQUEsa0JBQWtCLEdBQUc7QUFDbkIsV0FBTztBQUNMQyxNQUFBQSxPQUFPLEVBQUdULElBQUQsSUFBVTtBQUNqQixhQUFLSCxhQUFMLENBQW1CUyxJQUFuQixDQUF3QixHQUFHSSxNQUFNLENBQUNDLElBQVAsQ0FBWVgsSUFBWixDQUEzQjtBQUNEO0FBSEksS0FBUDtBQUtEOztBQTdCd0I7O0FBZ0MzQlksTUFBTSxDQUFDQyxPQUFQLEdBQWlCcEIsb0JBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgT3BlcmF0aW9uMnh4UmVzcG9uc2Uge1xuICBzdGF0aWMgZ2V0IHJ1bGUoKSB7XG4gICAgcmV0dXJuICdvcGVyYXRpb24tMnh4LXJlc3BvbnNlJztcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKGNvbmZpZykge1xuICAgIHRoaXMuY29uZmlnID0gY29uZmlnO1xuICAgIHRoaXMucmVzcG9uc2VDb2RlcyA9IFtdO1xuICB9XG5cbiAgT3BlbkFQSU9wZXJhdGlvbigpIHtcbiAgICByZXR1cm4ge1xuICAgICAgb25FeGl0OiAobm9kZSwgZGVmaW5pdGlvbiwgY3R4KSA9PiB7XG4gICAgICAgIGNvbnN0IGVycm9ycyA9IFtdO1xuICAgICAgICBpZiAoIXRoaXMucmVzcG9uc2VDb2Rlcy5maW5kKChjb2RlKSA9PiBjb2RlWzBdID09PSAnMicpKSB7XG4gICAgICAgICAgZXJyb3JzLnB1c2goY3R4LmNyZWF0ZUVycm9yKCdPcGVyYXRpb24gbXVzdCBoYXZlIGF0IGxlYXN0IG9uZSAyeHggcmVzcG9uc2UuJywgJ2tleScpKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnJlc3BvbnNlQ29kZXMgPSBbXTtcbiAgICAgICAgcmV0dXJuIGVycm9ycztcbiAgICAgIH0sXG4gICAgfTtcbiAgfVxuXG4gIE9wZW5BUElSZXNwb25zZU1hcCgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgb25FbnRlcjogKG5vZGUpID0+IHtcbiAgICAgICAgdGhpcy5yZXNwb25zZUNvZGVzLnB1c2goLi4uT2JqZWN0LmtleXMobm9kZSkpO1xuICAgICAgfSxcbiAgICB9O1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gT3BlcmF0aW9uMnh4UmVzcG9uc2U7XG4iXX0=