"use strict";

var _utils = require("../../../utils");

class SuggestPossibleRefs {
  static get rule() {
    return 'suggest-possible-refs';
  }

  OpenAPIRoot() {
    return {
      onExit: (node, definition, ctx) => {
        for (let i = 0; i < ctx.result.length; i++) {
          if (ctx.result[i].fromRule === 'resolve-ref') {
            const possibleAlternate = (0, _utils.getClosestString)(ctx.result[i].value.$ref, ctx.visited.map(el => `#/${el.split('::').pop()}`));
            ctx.result[i].possibleAlternate = possibleAlternate;
          }
        }
      }
    };
  }

}

module.exports = SuggestPossibleRefs;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy92aXNpdG9ycy9ydWxlcy9zZW1hbnRpYy9zdWdnZXN0UmVzb2x2ZXNSZWYuanMiXSwibmFtZXMiOlsiU3VnZ2VzdFBvc3NpYmxlUmVmcyIsInJ1bGUiLCJPcGVuQVBJUm9vdCIsIm9uRXhpdCIsIm5vZGUiLCJkZWZpbml0aW9uIiwiY3R4IiwiaSIsInJlc3VsdCIsImxlbmd0aCIsImZyb21SdWxlIiwicG9zc2libGVBbHRlcm5hdGUiLCJ2YWx1ZSIsIiRyZWYiLCJ2aXNpdGVkIiwibWFwIiwiZWwiLCJzcGxpdCIsInBvcCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBRUEsTUFBTUEsbUJBQU4sQ0FBMEI7QUFDeEIsYUFBV0MsSUFBWCxHQUFrQjtBQUNoQixXQUFPLHVCQUFQO0FBQ0Q7O0FBRURDLEVBQUFBLFdBQVcsR0FBRztBQUNaLFdBQU87QUFDTEMsTUFBQUEsTUFBTSxFQUFFLENBQUNDLElBQUQsRUFBT0MsVUFBUCxFQUFtQkMsR0FBbkIsS0FBMkI7QUFDakMsYUFBSyxJQUFJQyxDQUFDLEdBQUcsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHRCxHQUFHLENBQUNFLE1BQUosQ0FBV0MsTUFBL0IsRUFBdUNGLENBQUMsRUFBeEMsRUFBNEM7QUFDMUMsY0FBSUQsR0FBRyxDQUFDRSxNQUFKLENBQVdELENBQVgsRUFBY0csUUFBZCxLQUEyQixhQUEvQixFQUE4QztBQUM1QyxrQkFBTUMsaUJBQWlCLEdBQUcsNkJBQWlCTCxHQUFHLENBQUNFLE1BQUosQ0FBV0QsQ0FBWCxFQUFjSyxLQUFkLENBQW9CQyxJQUFyQyxFQUEyQ1AsR0FBRyxDQUFDUSxPQUFKLENBQVlDLEdBQVosQ0FBaUJDLEVBQUQsSUFBUyxLQUFJQSxFQUFFLENBQUNDLEtBQUgsQ0FBUyxJQUFULEVBQWVDLEdBQWYsRUFBcUIsRUFBbEQsQ0FBM0MsQ0FBMUI7QUFDQVosWUFBQUEsR0FBRyxDQUFDRSxNQUFKLENBQVdELENBQVgsRUFBY0ksaUJBQWQsR0FBa0NBLGlCQUFsQztBQUNEO0FBQ0Y7QUFDRjtBQVJJLEtBQVA7QUFVRDs7QUFoQnVCOztBQW1CMUJRLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQnBCLG1CQUFqQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldENsb3Nlc3RTdHJpbmcgfSBmcm9tICcuLi8uLi8uLi91dGlscyc7XG5cbmNsYXNzIFN1Z2dlc3RQb3NzaWJsZVJlZnMge1xuICBzdGF0aWMgZ2V0IHJ1bGUoKSB7XG4gICAgcmV0dXJuICdzdWdnZXN0LXBvc3NpYmxlLXJlZnMnO1xuICB9XG5cbiAgT3BlbkFQSVJvb3QoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG9uRXhpdDogKG5vZGUsIGRlZmluaXRpb24sIGN0eCkgPT4ge1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGN0eC5yZXN1bHQubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICBpZiAoY3R4LnJlc3VsdFtpXS5mcm9tUnVsZSA9PT0gJ3Jlc29sdmUtcmVmJykge1xuICAgICAgICAgICAgY29uc3QgcG9zc2libGVBbHRlcm5hdGUgPSBnZXRDbG9zZXN0U3RyaW5nKGN0eC5yZXN1bHRbaV0udmFsdWUuJHJlZiwgY3R4LnZpc2l0ZWQubWFwKChlbCkgPT4gYCMvJHtlbC5zcGxpdCgnOjonKS5wb3AoKX1gKSk7XG4gICAgICAgICAgICBjdHgucmVzdWx0W2ldLnBvc3NpYmxlQWx0ZXJuYXRlID0gcG9zc2libGVBbHRlcm5hdGU7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9LFxuICAgIH07XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBTdWdnZXN0UG9zc2libGVSZWZzO1xuIl19