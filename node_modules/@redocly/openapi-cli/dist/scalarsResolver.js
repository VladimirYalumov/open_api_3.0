"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = resolveScalars;

var _path = _interopRequireDefault(require("path"));

var _fs = _interopRequireDefault(require("fs"));

var _error = _interopRequireDefault(require("./error"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function resolveScalars(resolvedNode, definition, ctx) {
  Object.keys(definition.properties).filter(k => resolvedNode[k]).filter(k => typeof resolvedNode[k] === 'object').filter(k => definition.resolvableScalars && definition.resolvableScalars.indexOf(k) !== -1).filter(k => resolvedNode[k].$ref).forEach(k => {
    const resolvedFilePath = _path.default.resolve(_path.default.dirname(ctx.filePath), resolvedNode[k].$ref);

    ctx.fileDependencies.add(resolvedFilePath);

    if (_fs.default.existsSync(resolvedFilePath)) {
      resolvedNode[k] = _fs.default.readFileSync(resolvedFilePath, 'utf-8');
    } else {
      ctx.path.push(k);
      ctx.path.push('$ref');
      ctx.result.push((0, _error.default)('Reference does not exist.', resolvedNode, ctx, {
        fromRule: 'resolve-scalars'
      }));
      ctx.path.pop();
      ctx.path.pop();
    }
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9zY2FsYXJzUmVzb2x2ZXIuanMiXSwibmFtZXMiOlsicmVzb2x2ZVNjYWxhcnMiLCJyZXNvbHZlZE5vZGUiLCJkZWZpbml0aW9uIiwiY3R4IiwiT2JqZWN0Iiwia2V5cyIsInByb3BlcnRpZXMiLCJmaWx0ZXIiLCJrIiwicmVzb2x2YWJsZVNjYWxhcnMiLCJpbmRleE9mIiwiJHJlZiIsImZvckVhY2giLCJyZXNvbHZlZEZpbGVQYXRoIiwicGF0aCIsInJlc29sdmUiLCJkaXJuYW1lIiwiZmlsZVBhdGgiLCJmaWxlRGVwZW5kZW5jaWVzIiwiYWRkIiwiZnMiLCJleGlzdHNTeW5jIiwicmVhZEZpbGVTeW5jIiwicHVzaCIsInJlc3VsdCIsImZyb21SdWxlIiwicG9wIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7Ozs7QUFHZSxTQUFTQSxjQUFULENBQXdCQyxZQUF4QixFQUFzQ0MsVUFBdEMsRUFBa0RDLEdBQWxELEVBQXVEO0FBQ3BFQyxFQUFBQSxNQUFNLENBQUNDLElBQVAsQ0FBWUgsVUFBVSxDQUFDSSxVQUF2QixFQUNHQyxNQURILENBQ1dDLENBQUQsSUFBT1AsWUFBWSxDQUFDTyxDQUFELENBRDdCLEVBRUdELE1BRkgsQ0FFV0MsQ0FBRCxJQUFPLE9BQU9QLFlBQVksQ0FBQ08sQ0FBRCxDQUFuQixLQUEyQixRQUY1QyxFQUdHRCxNQUhILENBR1dDLENBQUQsSUFBT04sVUFBVSxDQUFDTyxpQkFBWCxJQUFnQ1AsVUFBVSxDQUFDTyxpQkFBWCxDQUE2QkMsT0FBN0IsQ0FBcUNGLENBQXJDLE1BQTRDLENBQUMsQ0FIOUYsRUFJR0QsTUFKSCxDQUlXQyxDQUFELElBQU9QLFlBQVksQ0FBQ08sQ0FBRCxDQUFaLENBQWdCRyxJQUpqQyxFQUtHQyxPQUxILENBS1lKLENBQUQsSUFBTztBQUNkLFVBQU1LLGdCQUFnQixHQUFHQyxjQUFLQyxPQUFMLENBQWFELGNBQUtFLE9BQUwsQ0FBYWIsR0FBRyxDQUFDYyxRQUFqQixDQUFiLEVBQXlDaEIsWUFBWSxDQUFDTyxDQUFELENBQVosQ0FBZ0JHLElBQXpELENBQXpCOztBQUNBUixJQUFBQSxHQUFHLENBQUNlLGdCQUFKLENBQXFCQyxHQUFyQixDQUF5Qk4sZ0JBQXpCOztBQUNBLFFBQUlPLFlBQUdDLFVBQUgsQ0FBY1IsZ0JBQWQsQ0FBSixFQUFxQztBQUNuQ1osTUFBQUEsWUFBWSxDQUFDTyxDQUFELENBQVosR0FBa0JZLFlBQUdFLFlBQUgsQ0FBZ0JULGdCQUFoQixFQUFrQyxPQUFsQyxDQUFsQjtBQUNELEtBRkQsTUFFTztBQUNMVixNQUFBQSxHQUFHLENBQUNXLElBQUosQ0FBU1MsSUFBVCxDQUFjZixDQUFkO0FBQ0FMLE1BQUFBLEdBQUcsQ0FBQ1csSUFBSixDQUFTUyxJQUFULENBQWMsTUFBZDtBQUNBcEIsTUFBQUEsR0FBRyxDQUFDcUIsTUFBSixDQUFXRCxJQUFYLENBQWdCLG9CQUFZLDJCQUFaLEVBQXlDdEIsWUFBekMsRUFBdURFLEdBQXZELEVBQTREO0FBQUVzQixRQUFBQSxRQUFRLEVBQUU7QUFBWixPQUE1RCxDQUFoQjtBQUNBdEIsTUFBQUEsR0FBRyxDQUFDVyxJQUFKLENBQVNZLEdBQVQ7QUFDQXZCLE1BQUFBLEdBQUcsQ0FBQ1csSUFBSixDQUFTWSxHQUFUO0FBQ0Q7QUFDRixHQWpCSDtBQWtCRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBwYXRoIGZyb20gJ3BhdGgnO1xuaW1wb3J0IGZzIGZyb20gJ2ZzJztcbmltcG9ydCBjcmVhdGVFcnJvciBmcm9tICcuL2Vycm9yJztcblxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiByZXNvbHZlU2NhbGFycyhyZXNvbHZlZE5vZGUsIGRlZmluaXRpb24sIGN0eCkge1xuICBPYmplY3Qua2V5cyhkZWZpbml0aW9uLnByb3BlcnRpZXMpXG4gICAgLmZpbHRlcigoaykgPT4gcmVzb2x2ZWROb2RlW2tdKVxuICAgIC5maWx0ZXIoKGspID0+IHR5cGVvZiByZXNvbHZlZE5vZGVba10gPT09ICdvYmplY3QnKVxuICAgIC5maWx0ZXIoKGspID0+IGRlZmluaXRpb24ucmVzb2x2YWJsZVNjYWxhcnMgJiYgZGVmaW5pdGlvbi5yZXNvbHZhYmxlU2NhbGFycy5pbmRleE9mKGspICE9PSAtMSlcbiAgICAuZmlsdGVyKChrKSA9PiByZXNvbHZlZE5vZGVba10uJHJlZilcbiAgICAuZm9yRWFjaCgoaykgPT4ge1xuICAgICAgY29uc3QgcmVzb2x2ZWRGaWxlUGF0aCA9IHBhdGgucmVzb2x2ZShwYXRoLmRpcm5hbWUoY3R4LmZpbGVQYXRoKSwgcmVzb2x2ZWROb2RlW2tdLiRyZWYpO1xuICAgICAgY3R4LmZpbGVEZXBlbmRlbmNpZXMuYWRkKHJlc29sdmVkRmlsZVBhdGgpO1xuICAgICAgaWYgKGZzLmV4aXN0c1N5bmMocmVzb2x2ZWRGaWxlUGF0aCkpIHtcbiAgICAgICAgcmVzb2x2ZWROb2RlW2tdID0gZnMucmVhZEZpbGVTeW5jKHJlc29sdmVkRmlsZVBhdGgsICd1dGYtOCcpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY3R4LnBhdGgucHVzaChrKTtcbiAgICAgICAgY3R4LnBhdGgucHVzaCgnJHJlZicpO1xuICAgICAgICBjdHgucmVzdWx0LnB1c2goY3JlYXRlRXJyb3IoJ1JlZmVyZW5jZSBkb2VzIG5vdCBleGlzdC4nLCByZXNvbHZlZE5vZGUsIGN0eCwgeyBmcm9tUnVsZTogJ3Jlc29sdmUtc2NhbGFycycgfSkpO1xuICAgICAgICBjdHgucGF0aC5wb3AoKTtcbiAgICAgICAgY3R4LnBhdGgucG9wKCk7XG4gICAgICB9XG4gICAgfSk7XG59XG4iXX0=