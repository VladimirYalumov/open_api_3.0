openapi: 3.0.0
info:
  version: '1.0'
  title: REST API
  contact:
    name: Владимир
    email: vladimir.ylmv@gmail.com
servers:
  - url: 'https://example.com/v1.0'
    description: Live Server
tags:
  - name: Раздел
    description: |
      API для портала КиноПоиск
security:
  - SecretApiKey: []
  - JWT: []
paths:
  /top:
    get:
      summary: Топ
      description: Запрос на получение топа сериалов по просмотрам среди новинок
      responses:
        '200':
          description: OK
          content:
            applications/json:
              schema:
                properties:
                  top:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        film:
                          type: string
                          example: Game of Thrones
        '400':
          description: Bad request
          content:
            applications/json:
              schema:
                properties:
                  errors:
                    type: object
                    properties:
                      error:
                        type: string
                        example: Bad request
  '/getepisode/{id}':
    get:
      summary: Серия
      description: Запрос на получение серии
      tags:
        - Film
      parameters:
        - name: id
          in: path
          description: Episode ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            applications/json:
              schema:
                properties:
                  id:
                    type: number
                    example: 1.2
                  name:
                    type: string
                    example: Эпическое название
  '/getfilm/{id}':
    get:
      summary: Сериал
      description: Запрос на получение всех серий сериала
      tags:
        - Film
      parameters:
        - name: id
          in: path
          description: Film ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  Film:
                    type: object
                    properties:
                      id:
                        type: integer
                        format: int64
                      name:
                        type: string
                    required:
                      - id
                      - name
                  Series:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: Game of thrones
                        episode:
                          type: number
                          example: 1.12
  '/addmark/{id}':
    parameters:
      - $ref: '#/components/parameters/organizationId'
    post:
      summary: Добавить оценку фильма
      description: Добавить оценку фильма от 1 до 10
      tags:
        - Mark
      security:
        - bearerAuth: []
      operationId: addMark
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                name:
                  type: string
                mark:
                  type: integer
              example:
                id: 10
                name: The Boys
                mark: 8
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: OK
  /addepisode/:
    post:
      summary: Добавить серию
      description: >-
        Добавить серию с указание id сериала, если сериал не существует то он
        создастся с одной серией
      security:
        - bearerAuth: []
      operationId: addFilm
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                film_id:
                  type: integer
                name:
                  type: string
              example:
                id: 10.1
                film_id: 8
                name: 5 серия
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: OK
  /auth:
    post:
      summary: JWT токен
      description: Выдаёт токен пользавтелю для осуществления операций
      tags:
        - Auth
      security: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                email:
                  type: string
                  example: stelmistery@yandex.ru
                password:
                  type: string
                  example: 123qwerty123
      responses:
        '200':
          headers:
            Api-Token:
              $ref: '#/components/headers/Api-Token'
          description: OK
          content:
            applications/json:
              schema:
                properties:
                  user:
                    $ref: '#/components/schemas/User'
        '422':
          description: Ошибка авторизации
          content:
            application/json:
              schema:
                properties:
                  errors:
                    type: object
                    properties:
                      email:
                        type: array
                        items:
                          type: string
                          example: Не указан Email
                      password:
                        type: array
                        items:
                          type: string
                          example: Не указан пароль
    x-components:
      headers:
        Api-Token: &ref_1
          schema:
            type: string
            example: 9f34dd3a-ff8d-43aa-b286-9f22555319f6
      schemas:
        User: &ref_0
          type: object
          properties:
            id:
              type: string
              example: 41
            name:
              type: string
              example: Ялымов
            email:
              type: string
              example: Ялымов.com
  /register:
    post:
      summary: Регистрация пользователя
      description: Регестрирует пользователя в системе
      tags:
        - Auth
      security: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: stelmistery@yandex.ru
                password:
                  type: string
                  example: 123qwerty123
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Yalimov
                      email:
                        type: string
                        example: vladimir.ylmv@gmail.com
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    ResourceId:
      type: string
      description: Токен
      maxLength: 50
      example: 4f6cf35x-2c4y-483z-a0a9-158621f77a21
    User: *ref_0
  parameters:
    organizationId:
      name: User token
      in: header
      description: Токен пользователя на чьих правах добавляется сполнитель
      schema:
        $ref: '#/components/schemas/ResourceId'
      required: false
  headers:
    Api-Token: *ref_1
